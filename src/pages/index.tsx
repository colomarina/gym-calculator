import React, { ChangeEventHandler, useState } from "react";
import Head from "next/head";

import { calculateDiscs, GymEnum } from "@/utilities";
import {
  createListCollection,
  Field,
  NumberInput,
  Portal,
  Select,
} from "@chakra-ui/react";

const options = createListCollection({
  items: [
    { label: "Comercial", value: GymEnum.COMERCIAL },
    { label: "Powerlifting", value: GymEnum.POWERLIFTING },
  ],
});

const Home = () => {
  const [typeGym, setTypeGym] = useState<string[]>([]);
  const [weight, setWeight] = useState(0);

  console.log("typeGym", typeGym[0]);
  return (
    <>
      <Head>
        <title>Calculadora de Gimnasio</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {/* <Container sx={{ padding: 0, margin: 0 }}> */}
      <h1 style={{ textAlign: "center" }}>Calculadora de Gimnasio</h1>
      <h3 style={{ textAlign: "center" }}>Cargar barra de GYM</h3>
      <Select.Root
        collection={options}
        value={[...typeGym]}
        onValueChange={(e) => setTypeGym(e.value)}
      >
        <Select.HiddenSelect />
        <Select.Label>Tipo de Gimnasio</Select.Label>
        <Select.Control>
          <Select.Trigger>
            <Select.ValueText placeholder="Elegi el tipo de Gimnasio" />
          </Select.Trigger>
          <Select.IndicatorGroup>
            <Select.Indicator />
          </Select.IndicatorGroup>
        </Select.Control>
        <Portal>
          <Select.Positioner>
            <Select.Content>
              {options.items.map((gymType) => (
                <Select.Item item={gymType} key={gymType.value}>
                  {gymType.label}
                  <Select.ItemIndicator />
                </Select.Item>
              ))}
            </Select.Content>
          </Select.Positioner>
        </Portal>
      </Select.Root>
      <Field.Root>
        <Field.Label>Peso en KG</Field.Label>
        <NumberInput.Root
        style={{ width: '100%' }}
          value={`${weight}`}
          onValueChange={(e) => setWeight(Number(e.value))}
        >
          <NumberInput.Control />
          <NumberInput.Input />
        </NumberInput.Root>
      </Field.Root>
      <div>{weight !== 0 && calculateDiscs(weight, typeGym[0] as GymEnum)}</div>
    </>
  );
};

export default Home;
